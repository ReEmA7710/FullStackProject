---
- name: Deploy fullStakProject on k8s
  hosts: k8s_server
  become: true

  vars:
    build_number: "{{ lookup('env','BUILD_NUMBER') | default('dev', true) }}"
    backend_image: "docker.io/reemaalsubaie24/backend-demo:{{ build_number }}"
    frontend_image: "docker.io/reemaalsubaie24/frontend:{{ build_number }}"
    kubeconfig_path: "/home/ubuntu/.kube/config"
    repo_root: "{{ playbook_dir | dirname }}"  
  tasks:
    - name: Copy namespace manifest to target server
      copy:
        src: "{{ repo_root }}/k8s/namespace.yaml"
        dest: /home/ubuntu/namespace.yaml
        owner: ubuntu
        group: ubuntu
        mode: '0644'
    - name: Copy pvc manifest to target server
      copy:
        src: "{{ repo_root }}/k8s/mysql-pvc.yaml"
        dest: /home/ubuntu/mysql-pvc.yaml
        owner: ubuntu
        group: ubuntu
        mode: '0644'
  
    - name: Copy mysql manifest to target server
      copy:
        src: "{{ repo_root }}/k8s/mysql-deployment.yaml"
        dest: /home/ubuntu/mysql-deployment.yaml
        owner: ubuntu
        group: ubuntu
        mode: '0644'

    
    - name: Render backend manifest with injected image
      template:
        src: "{{ repo_root }}/k8s/Backend-Deployment.yaml"
        dest: /home/ubuntu/Backend-Deployment.yaml
        owner: ubuntu
        group: ubuntu
        mode: '0644'

    - name: Render frontend manifest with injected image
      template:
        src: "{{ repo_root }}/k8s/Frontend-Deployment.yaml"
        dest: /home/ubuntu/Frontend-Deployment.yaml
        owner: ubuntu
        group: ubuntu
        mode: '0644'

    - name: Show rendered images (debug)
      debug:
        msg:
          - "backend => {{ backend_image }}"
          - "frontend => {{ frontend_image }}"

   
    - name: Apply namespace
      command: kubectl apply -f /home/ubuntu/namespace.yaml
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
        
    - name: Apply pvc
      command: kubectl apply -f /home/ubuntu/mysql-pvc.yaml
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
        
    - name: Apply mysql
      command: kubectl apply -f /home/ubuntu/mysql-deployment.yaml
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    
    - name: Check if deployment exists (backend)
      command: kubectl get deployment backend-deployment
      register: be_check
      failed_when: false
      changed_when: false
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    - name: Delete existing deployment if found (backend)
      command: kubectl delete deployment backend-deployment
      when: be_check.rc == 0
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    - name: Apply backend
      command: kubectl apply -f /home/ubuntu/Backend-Deployment.yaml
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    
    - name: Check if deployment exists (frontend)
      command: kubectl get deployment frontend-deployment
      register: fe_check
      failed_when: false
      changed_when: false
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    - name: Delete existing deployment if found (frontend)
      command: kubectl delete deployment frontend-deployment
      when: fe_check.rc == 0
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    - name: Apply frontend
      command: kubectl apply -f /home/ubuntu/Frontend-Deployment.yaml
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
        
    - name: Copy ingress manifest to target server
      copy:
        src: "{{ repo_root }}/k8s/ingress-frontend.yaml"
        dest: /home/ubuntu/ingress-frontend.yaml
        owner: ubuntu
        group: ubuntu
        mode: '0644'

    - name: Apply ingress
      command: kubectl apply -f /home/ubuntu/ingress-frontend.yaml
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    - name: Copy ingress manifest to target server
      copy:
        src: "{{ repo_root }}/k8s/ingress-backend.yaml"
        dest: /home/ubuntu/ingress-backend.yaml
        owner: ubuntu
        group: ubuntu
        mode: '0644'

    - name: Apply ingress
      command: kubectl apply -f /home/ubuntu/ingress-backend.yaml
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"



