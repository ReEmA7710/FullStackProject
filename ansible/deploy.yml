- name: Deploy FullStack Project on Kubernetes
  hosts: k8s_server
  become: true

  vars:
    build_number: "{{ lookup('env','BUILD_NUMBER') | default('dev', true) }}"
    backend_image: "docker.io/reemaalsubaie24/backend-demo:{{ build_number }}"
    frontend_image: "docker.io/reemaalsubaie24/frontend:{{ build_number }}"
    kubeconfig_path: "/home/ubuntu/.kube/config"
    repo_root: "{{ playbook_dir | dirname }}"  
    ns: "fullstack"    

  tasks:
    - name: Transfer Namespace Manifest
      copy:
        src: "{{ repo_root }}/k8s/namespace.yaml"
        dest: /home/ubuntu/namespace.yaml
        owner: ubuntu
        group: ubuntu
        mode: '0644'

    - name: Transfer MySQL PVC Manifest
      copy:
        src: "{{ repo_root }}/k8s/mysql-pvc.yaml"
        dest: /home/ubuntu/mysql-pvc.yaml
        owner: ubuntu
        group: ubuntu
        mode: '0644'

    - name: Transfer MySQL Deployment Manifest
      copy:
        src: "{{ repo_root }}/k8s/mysql-deployment.yaml"
        dest: /home/ubuntu/mysql-deployment.yaml
        owner: ubuntu
        group: ubuntu
        mode: '0644'

    - name: Render Backend Deployment with Image Tag
      template:
        src: "{{ repo_root }}/k8s/Backend-Deployment.yaml"
        dest: /home/ubuntu/Backend-Deployment.yaml
        owner: ubuntu
        group: ubuntu
        mode: '0644'

    - name: Render Frontend Deployment with Image Tag
      template:
        src: "{{ repo_root }}/k8s/Frontend-Deployment.yaml"
        dest: /home/ubuntu/Frontend-Deployment.yaml
        owner: ubuntu
        group: ubuntu
        mode: '0644'

    - name: Debug Rendered Images
      debug:
        msg:
          - "backend => {{ backend_image }}"
          - "frontend => {{ frontend_image }}"

    - name: Apply Namespace
      command: kubectl apply -f /home/ubuntu/namespace.yaml
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    - name: Apply MySQL PVC
      command: kubectl apply -f /home/ubuntu/mysql-pvc.yaml -n {{ ns }}
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    - name: Remove Old MySQL Deployment if Exists
      command: kubectl -n {{ ns }} delete deployment mysql --ignore-not-found
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    - name: Apply MySQL Deployment
      command: kubectl apply -f /home/ubuntu/mysql-deployment.yaml -n {{ ns }}
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    - name: Check Backend Deployment Existence
      command: kubectl -n {{ ns }} get deployment backend-deployment
      register: be_check
      failed_when: false
      changed_when: false
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    - name: Remove Old Backend Deployment if Exists
      command: kubectl -n {{ ns }} delete deployment backend-deployment
      when: be_check.rc == 0
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    - name: Apply Backend Deployment
      command: kubectl apply -f /home/ubuntu/Backend-Deployment.yaml -n {{ ns }}
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    - name: Check Frontend Deployment Existence
      command: kubectl -n {{ ns }} get deployment frontend-deployment
      register: fe_check
      failed_when: false
      changed_when: false
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    - name: Remove Old Frontend Deployment if Exists
      command: kubectl -n {{ ns }} delete deployment frontend-deployment
      when: fe_check.rc == 0
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    - name: Apply Frontend Deployment
      command: kubectl apply -f /home/ubuntu/Frontend-Deployment.yaml -n {{ ns }}
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    - name: Transfer Frontend Ingress Manifest
      copy:
        src: "{{ repo_root }}/k8s/ingress-frontend.yaml"
        dest: /home/ubuntu/ingress-frontend.yaml
        owner: ubuntu
        group: ubuntu
        mode: '0644'

    - name: Apply Frontend Ingress
      command: kubectl apply -f /home/ubuntu/ingress-frontend.yaml -n {{ ns }}
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    - name: Transfer Backend Ingress Manifest
      copy:
        src: "{{ repo_root }}/k8s/ingress-backend.yaml"
        dest: /home/ubuntu/ingress-backend.yaml
        owner: ubuntu
        group: ubuntu
        mode: '0644'

    - name: Apply Backend Ingress
      command: kubectl apply -f /home/ubuntu/ingress-backend.yaml -n {{ ns }}
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
